services:
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    env_file: ".env"
    ports:
      - $POSTGRES_PORT:5432
    volumes:
      - $POSTGRES_DATA_PATH:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 3s
      timeout: 3s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    env_file: ".env"
    ports:
      - $PGADMIN_PORT:80
    volumes:
      - $PGADMIN_DATA_PATH:/var/lib/pgadmin
    configs:
      - source: servers.json
        target: /pgadmin4/servers.json
      - source: pgpass
        target: /pgpass
    entrypoint: /bin/sh -c "chmod 600 /pgpass; /entrypoint.sh;"

  migrate:
    image: migrate/migrate
    depends_on:
      postgres:
        condition: service_healthy
    env_file: ".env"
    volumes:
      - ./../migrations:/migrations
    command: ["-source", "file://migrations", "-database",  "postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:$POSTGRES_PORT?sslmode=disable", "up"]

configs:
  servers.json:
    content: |
      {"Servers": {"1": {
        "Name": "Postgres",
        "Group": "Servers",
        "Host": "postgres",
        "Port": 5432,
        "MaintenanceDB": "postgres",
        "Username": "user",
        "PassFile": "/pgpass",
        "SSLMode": "prefer"
      }}}
  pgpass:
    content: postgres:5432:*:user:passwd